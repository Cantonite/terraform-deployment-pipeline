name: Reusable Terraform Deployment Workflow

on:
  workflow_call:
    # inputs:
    #   environment:
    #     required: true
    #     type: string
    # secrets:
    #   token:
    #     required: true

jobs:
  deploy-development:
    name: Deploy Development
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: development
      TF_IN_AUTOMATION: true
    # needs:
    #   - ci
    environment:
      name: development
      url: https://app.terraform.io/app/Cantonite/workspaces/terraform-deployment-pipeline-development
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: development-terraform-build
      - name: Extract Tar
        id: tar
        run: tar -xvf development.tar
      - run: ls -Rla
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Apply
        id: apply
        run: terraform apply -input=false development.tfplan > output.txt 2>&1 || true
      - name: Upload Logs
        id: artifact-upload
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            output.txt
            crash.*.log
          retention-days: 1
          if-no-files-found: error